{
  "swagger": "2.0",
  "info": {
    "description": "Este app filtra players para facilitar a criacao de seus times, evitando trolls e tempo buscando players que se dao bem com vc",
    "version": "1.0.0",
    "title": "Criando seus times",
    "contact": {
      "email": "kevin.kobori@sempreceub.com"
    },
    "license": {
      "name": "GPL 3.0",
      "url": "https://www.gnu.org/licenses/gpl-3.0.html"
    }
  },
  "host": "yourteams.net",
  "tags": [
    {
      "name": "GPFS",
      "description": "Filtrando players",
      "externalDocs": {
        "description": "Original site",
        "url": "http://yourteams.net"
      }
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done once the user confirms the email.",
        "operationId": "createUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "password",
            "description": "The password for login in clear text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/list": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List all Users",
        "description": "",
        "operationId": "list",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "403": {
            "description": "Don't have access rights"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Detail user",
        "description": "The ID is on query string",
        "operationId": "showUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID for description",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid solicitation, You are not allowed to view the user."
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update an existing user",
        "description": "The ID is on query string",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Request ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid solicitation, you are not allowed to update the user."
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes an exist user",
        "description": "The ID is on query string",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Requires ID to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid solicitation, you are not allowed to delete the user."
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "views": {
          "type": "number"
        },
        "likes": {
          "type": "number"
        },
        "replies": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Post"
      }
    },
    "PostReport": {
      "type": "object",
      "properties": {
        "reportSender": {
          "$ref": "#/definitions/User"
        },
        "reportedPost": {
          "$ref": "#/definitions/Post"
        },
        "description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PostReport"
      }
    },
    "UserReport": {
      "type": "object",
      "properties": {
        "reportSender": {
          "$ref": "#/definitions/User"
        },
        "reportedUser": {
          "$ref": "#/definitions/User"
        },
        "description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UserReport"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "integer",
	         "format": "int64"
        },
	"id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "gender": {
          "type": "boolean"
        },
        "birthday": {
          "type": "string",
          "format": "Date"
        }
      },
      "xml": {
        "name": "User"
      }
    }
  }
}
